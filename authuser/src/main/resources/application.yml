server:
  port: 8082
  servlet:
    context-path: '/ead-authuser/'

spring:
  application:
    name: ead-authuser-service

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
      dialect: org.hibernate.dialect.PostgreSQLDialect
      jdbc:
        lob.non-contextual-creation: true

  jmx:
    enabled: false
  datasource:
    username: postgres
    password: T@ider1398
    url: jdbc:postgresql://localhost:5432/ead-authuser-v2
  output:
    ansi:
      enabled: Always
  #RabbitMQ configuração
  rabbitmq:
    host: localhost
    port: 5672
    username: admin
    password: admin

#Configuração do Log para TRACE, visto que INFO é o default
logging:
  level:
    com.ead: TRACE
    root: INFO #Seta o padrão para todo o framework como INFO, DEBUG, etc
    org.springframework.web: DEBUG
    org.hibernate: INFO

#definição do endereço de Course para comunicação síncrona entre os microserviços, utilizando o id criado no Eureka server
ead:
  api:
    url:
      course: 'http://ead-course-service/ead-course'
  #Definição de Broker RabbitMQ para EAD do tipo "fanout"
  broker:
    exchange:
      userEvent: ead.userevent #nome do exchange

eureka:
  client:
    serviceUrl:
      defaultZone: 'http://localhost:8761/eureka'
  instance:
    hostname: localhost